When would you want to use a remote repository rather than keeping all your work
local?

    I would want to use a remote repository when I want to share my work with
    other people or even just as a backup.

Why might you want to always pull changes manually rather than having Git
automatically stay up-to-date with your remote repository?

    Automatic updates would be too unpredictable when different people can push
    changes to the same remote repository. Someone's local repository could get
    updated at the wrong time. It's best to always pull changes manually, so
    that we can decide when we're ready to integrate them.

Describe the differences between forks, clones, and branches.  When would you
use one instead of another?

    When we want to copy a repository on GitHub's servers, we can fork it. The
    fork keeps a reference to the original repository to facilitate pull
    requests. We use that method to contribute to a project or to develop our
    own version. Cloning a repository makes a copy of it on another location, be
    it on the same machine or not, but we cannot clone on GitHub. For example,
    we would clone one of our GitHub repositories to our local machine, so that
    we can work on it there and later push our changes back to GitHub. Branches
    are part of a repository. We use them, when at some point in time, we want
    to keep different versions of our code in parallel.

What is the benefit of having a copy of the last known state of the remote
stored locally?

    Fill in your answer here

How would you collaborate without using Git or GitHub?  What would be easier,
and what would be harder?

    Fill in your answer here

When would you want to make changes in a separate branch rather than directly in
master?  What benefits does each approach have?

    Fill in your answer here
